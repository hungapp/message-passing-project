version: '3'
services:
  zookeeper:
    container_name: udaconnect_zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: udaconnect_kafka
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  postgresql:
    env_file:
      - postgres.env
    image: 'postgis/postgis:12-2.5-alpine'
    ports:
      - '5432:5432'

  reverse-proxy:
    build:
      context: ./reverse-proxy
    image: reverse-proxy
    ports:
      - '30001:80'

  location:
    env_file:
      - .env
    build:
      context: ./api-location/rest
    image: location-rest
    ports:
      - '6000:6000'
    depends_on:
      - reverse-proxy
      - postgresql

  location-kafka:
    build:
      context: ./api-location/kafka
    image: location-kafka

  person:
    env_file:
      - .env
    build:
      context: ./api-person/rest
    image: person-rest
    ports:
      - '7000:7000'
    depends_on:
      - reverse-proxy
      - postgresql

  person-grpc:
    build:
      context: ./api-person/grpc
    image: person-grpc
    ports:
      - '50051:50051'
    depends_on:
      - person

  connection:
    env_file:
      - .env
    build:
      context: ./api-connection
    image: connection-rest
    ports:
      - '8000:8000'