openapi: 3.0.0
info:
  description: API for UdaConnect - a connection tracking mobile application using geographic location proximity
  version: '1.0.0'
  title: UdaConnect API

servers:
  - url: 'localhost:5000/{basePath}'
    variables:
      basePath:
        default: api

paths:
  /locations:
    post:
      tags:
        - 'location'
      summary: Adds a location
      operationId: addLocation
      description: Creates a location
      requestBody:
        description: A location that was created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '201':
          description: Location created successfully
        '400':
          description: 'Invalid input, object invalid'

  /locations/{location_id}:
    get:
      tags:
        - 'location'
      summary: Retrieves a location
      operationId: getLocationById
      description: Retrieves information about a location using location_id
      parameters:
        - name: 'location_id'
          in: 'path'
          description: 'ID of location to return'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Location found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad input parameter

  /persons:
    post:
      tags:
        - 'person'
      summary: Adds a person
      operationId: addPerson
      description: Creates a person
      requestBody:
        description: A location that was created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Location created successfully
        '400':
          description: 'Invalid input, object invalid'
    get:
      tags:
        - 'person'
      summary: Retrieves all persons
      operationId: getPersons
      description: Retrieves all persons
      responses:
        '200':
          description: List of all persons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
  /persons/{person_id}:
    get:
      tags:
        - 'person'
      summary: Retrieves a person
      operationId: getPersonById
      description: Retrieves information about a person using person_id
      parameters:
        - name: 'person_id'
          in: 'path'
          description: 'ID of person to return'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Person found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Bad input parameter

  /connections/{person_id}:
    get:
      tags:
        - 'connection'
      summary: Retrieves all connections of a person
      operationId: getConnections
      description: Retrieves information about all connection of a person using person_id
      parameters:
        - name: 'person_id'
          in: 'path'
          description: 'ID of person'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Connections found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Connection'
        '400':
          description: Bad input parameter

components:
  schemas:
    Location:
      type: object
      required:
        - id
        - person_id
        - longitude
        - latitude
        - creation_time
      properties:
        id:
          type: integer
          example: 1
        person_id:
          type: integer
          example: 1
        longitude:
          type: string
          example: '35.058564'
        latitude:
          type: string
          example: '-106.5721845'
        creation_time:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'

    Person:
      type: object
      required:
        - id
        - first_name
        - last_name
        - company_name
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: 'Hung'
        last_name:
          type: string
          example: 'Nguyen'
        company_name:
          type: string
          example: 'Airfox'

    Connection:
      type: object
      required:
        - person
        - location
      properties:
        person:
          $ref: '#/components/schemas/Person'
        location:
          $ref: '#/components/schemas/Location'
